services:
  broker:
    tty: true
    image: jeffkolb/alpine-kafka:0.10.2.0
    volumes_from:
      - broker-volume
      - broker-conf
    environment:
      - JVMFLAGS=-Xmx${kafka_mem}m -Xms${kafka_mem}m
      - CONFD_INTERVAL=${kafka_interval}
      - ZK_SERVICE=${zk_link}
      - KAFKA_DELETE_TOPICS=${kafka_delete_topics}
      - KAFKA_LOG_DIRS=${kafka_log_dir}
      - KAFKA_LOG_RETENTION_HOURS=${kafka_log_retention}
      - KAFKA_NUM_PARTITIONS=${kafka_num_partitions}
      - ADVERTISE_PUB_IP=${kafka_pub_ip}
      - ENABLE_JMX=${enable_jmx}
      - JMX_PORT=${jmx_port}
    external_links:
      - ${zk_link}:zk
    labels: 
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      io.rancher.container.hostname_override: container_name
      io.rancher.sidekicks: broker-volume, broker-conf
  broker-conf:
    net: none
    labels:
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      io.rancher.container.hostname_override: container_name
      io.rancher.container.start_once: true
    image: jeffkolb/rancher-kafka:v0.1.0-1
    volumes:
      - /opt/tools
  broker-volume:
    net: none
    labels:
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      io.rancher.container.hostname_override: container_name
      io.rancher.container.start_once: true
    environment:
      - SERVICE_UID=10003
      - SERVICE_GID=10003
      - SERVICE_VOLUME=${kafka_log_dir}
    volumes:
      - ${kafka_log_dir}
    volume_driver: local
    image: jeffkolb/alpine-volume:v0.1.0
  kafka-manager:
    ports:
    - "9000/tcp"
    image: jeffkolb/kafka-manager:1.3.3.4
    environment:
      - ZK_HOSTS=zk:2181
      - APPLICATION_SECRET=${app_secret}
      - KM_ARGS=${km_args}
    external_links:
      - ${zk_link}:zk
    labels: 
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      io.rancher.container.hostname_override: container_name

  rest:
    image: confluentinc/cp-kafka-rest:3.2.1
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: schema-registry:8081
      KAFKA_REST_HOST_NAME: 10.40.17.88
      KAFKA_REST_DEBUG: 'true'
      KAFKA_REST_BOOTSTRAP_SERVERS: broker:9092
      KAFKA_REST_ID: dongyanl
    stdin_open: true
    external_links:
    - zookeeper/zk:zk
    tty: true
    links:
    - schema-registry:schema-registry
    - broker:broker
    labels:
      io.rancher.container.pull_image: always

  kafka-topics-ui:
    image: landoop/kafka-topics-ui
    environment:
      KAFKA_REST_PROXY_URL: http://rest:8082/
      PROXY: 'true'
    stdin_open: true
    tty: true
    links:
    - rest:rest
    ports:
    - "8000/tcp"
    labels:
      io.rancher.container.pull_image: always

  schema-registry:
    image: confluentinc/cp-schema-registry:3.2.1
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zk:2181
      SCHEMA_REGISTRY_HOST_NAME: 10.40.17.88
      SCHEMA_REGISTRY_DEBUG: 'true'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    stdin_open: true
    external_links:
    - zookeeper/zk:zk
    tty: true
    ports:
    - "8081/tcp"
    labels:
      io.rancher.container.pull_image: always